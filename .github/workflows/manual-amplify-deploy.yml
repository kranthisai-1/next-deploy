name: Manual Deploy From Tag

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Tag to deploy (e.g., v1.2.3)'
        required: true
      deployment_environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - staging
          - sandbox
          - production
      deployment_message:
        description: 'Why are you deploying?'
        required: false
        default: 'Manual deploy'
      should_notify_over_slack:
        description: 'Notify Slack?'
        required: false
        default: true
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      STAGING_WEBHOOK: "https://webhooks.amplify.us-east-1.amazonaws.com/prod/webhooks?id=staging_id&token=staging_token"
      PRODUCTION_WEBHOOK: "https://webhooks.amplify.us-east-1.amazonaws.com/prod/webhooks?id=prod_id&token=prod_token"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important to fetch all tags

      - name: Create deploy branch from tag
        run: |
          git fetch --tags
          git checkout "tags/${{ inputs.version_tag }}" -b "build/${{ inputs.version_tag }}"
          git push origin "build/${{ inputs.version_tag }}"

      - name: Select webhook URL
        id: webhook
        run: |
          case "${{ inputs.deployment_environment }}" in
            "staging")
              echo "url=${STAGING_WEBHOOK}" >> "$GITHUB_OUTPUT"
              ;;
            "production")
              echo "url=${PRODUCTION_WEBHOOK}" >> "$GITHUB_OUTPUT"
              ;;
            *)
              echo "Unsupported environment"
              exit 1
              ;;
          esac

      - name: Trigger Amplify build
        run: |
          echo "Triggering Amplify build for branch build/${{ inputs.version_tag }}..."
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{}' \
            "${{ steps.webhook.outputs.url }}"

      # Optional: Cleanup deploy branch (if you don't want to keep it)
      # - name: Delete deploy branch
      #   run: |
      #     git push origin --delete "build/${{ inputs.version_tag }}"
