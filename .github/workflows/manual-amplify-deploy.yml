name: Manual Amplify Deploy

on:
  workflow_dispatch:
    inputs:
      deployment_environment:
        description: 'Deployment environment (e.g., staging or production)'
        required: true
        default: staging

jobs:
  deploy:
    name: Deploy to Amplify
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-east-1
      APP_ID: d1uwoew2a9382l

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::270290807520:role/GitHubActionsAmplifyDeployRole
          role-session-name: GitHubActionsSession
          aws-region: ${{ env.AWS_REGION }}

      - name: Trigger Amplify Deployment via Webhook
        run: |
          if [ "${{ github.event.inputs.deployment_environment }}" == "staging" ]; then
            curl -X POST https://webhook-url-for-staging
          elif [ "${{ github.event.inputs.deployment_environment }}" == "production" ]; then
            curl -X POST https://webhook-url-for-production
          else
            echo "::error::Invalid deployment environment"
            exit 1
          fi

      - name: Poll Amplify deployment status
        env:
          BRANCH_NAME: ${{ github.event.inputs.deployment_environment }}
        run: |
          echo "üì° Polling Amplify for latest deployment job status..."

          # Wait a few seconds for the deployment job to register
          sleep 10

          # Get the most recent job ID
          job_id=$(aws amplify list-jobs \
            --app-id "$APP_ID" \
            --branch-name "$BRANCH_NAME" \
            --query "jobSummaries[0].jobId" \
            --output text \
            --region "$AWS_REGION")

          echo "üÜî Latest job ID: $job_id"

          for i in {1..30}; do
            status=$(aws amplify get-job \
              --app-id "$APP_ID" \
              --branch-name "$BRANCH_NAME" \
              --job-id "$job_id" \
              --query "job.summary.status" \
              --output text \
              --region "$AWS_REGION")

            status=$(echo "$status" | tr -d '\r' | head -n 1)

            echo "üîÅ Deployment status: [$status]"

            if [[ "$status" == "SUCCEED" ]]; then
              echo "‚úÖ Amplify deployment succeeded."
              exit 0
            elif [[ "$status" == "FAILED" || "$status" == "CANCELLED" ]]; then
              echo "::error::‚ùå Amplify deployment failed with status: $status"
              exit 1
            fi

            sleep 10
          done

          echo "::error::‚è∞ Deployment timed out waiting for success."
          exit 1
