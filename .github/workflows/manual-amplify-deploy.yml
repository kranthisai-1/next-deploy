name: Manual Tag Deployment

on:
  workflow_dispatch:
    inputs:
      deployment_environment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - staging
          - production
      deployment_message:
        description: "Deployment reason"
        required: false
        default: "Manual deployment triggered"

permissions:
  id-token: write 
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.deployment_environment }}

    steps:
      - name: Validate that a tag was selected
        id: validate
        run: |
          echo "GITHUB_REF=${GITHUB_REF}"
          if [[ "${GITHUB_REF}" != refs/tags/* ]]; then
            echo "::error::You must run this workflow from a tag."
            exit 1
          fi
          echo "version_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::270290807521:role/GitHubActionsAmplifyDeployRole
          aws-region: us-east-1

      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.deployment_environment }}

      - name: Create .env.deploy
        run: |
          echo "VERSION_TAG=${{ steps.validate.outputs.version_tag }}" > .env.deploy
          echo "DEPLOYMENT_MESSAGE=${{ github.event.inputs.deployment_message }}" >> .env.deploy

      - name: Commit and push .env.deploy 
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add .env.deploy
          git commit --allow-empty -m "chore: update .env.deploy for ${{ steps.validate.outputs.version_tag }}"
          git push origin ${{ github.event.inputs.deployment_environment }}

      - name: Set webhook URL
        id: webhook
        run: |
          if [ "${{ github.event.inputs.deployment_environment }}" = "staging" ]; then
            echo "url=https://webhooks.amplify.us-east-1.amazonaws.com/prod/webhooks?id=491b16b6-4c4b-4690-ba80-3e4dcf40a4d4&token=HoP06RMo7z7VPwCznlDYrfSHdqBcPTCnMWgEybr9A" >> $GITHUB_OUTPUT
            echo "branch=staging" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.deployment_environment }}" = "production" ]; then
            echo "url=https://webhooks.amplify.us-east-1.amazonaws.com/prod/webhooks?id=da0ac255-2976-48ec-a99b-be6397caf298&token=GD0zBA1bAAFOlD87jT3KMJik8ylM0J5Nsex3OUNIOg" >> $GITHUB_OUTPUT
            echo "branch=main" >> $GITHUB_OUTPUT
          else
            echo "::error::Invalid environment"
            exit 1
          fi

      - name: Trigger Amplify deployment
        run: |
          curl -X POST "${{ steps.webhook.outputs.url }}"

      - name: Poll Amplify for deployment status
        env:
          APP_ID: d1uwoew2a9382l
          BRANCH_NAME: ${{ steps.webhook.outputs.branch }}
          AWS_REGION: us-east-1
        run: |
          echo "Polling Amplify for deployment status..."
          for i in {1..30}; do
            status=$(aws amplify list-jobs \
              --app-id "$APP_ID" \
              --branch-name "$BRANCH_NAME" \
              --query "jobSummaries[0].status" \
              --output text \
              --region "$AWS_REGION")

            echo "Deployment status: $status"

            if [[ "$status" == "SUCCEED" ]]; then
              echo "✅ Amplify deployment succeeded."
              exit 0
            elif [[ "$status" == "FAILED" || "$status" == "CANCELLED" ]]; then
              echo "::error::❌ Amplify deployment failed with status: $status"
              exit 1
            fi

            sleep 10
          done

          echo "::error::Deployment timed out waiting for success."
          exit 1
