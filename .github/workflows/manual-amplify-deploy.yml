name: Manual Tag Deployment

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: "Tag to deploy (e.g., v1.2.3)"
        required: true
      deployment_environment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - staging
          - production
      deployment_message:
        description: "Deployment reason"
        required: false
        default: "Manual deployment triggered"
      should_notify_over_slack:
        description: "Send Slack notification?"
        required: false
        default: true
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.deployment_environment }}
    
    steps:
      - name: Validate inputs
        run: |
          if ! git ls-remote --tags origin refs/tags/${{ github.event.inputs.version_tag }}; then
            echo "::error::Tag ${{ github.event.inputs.version_tag }} does not exist!"
            exit 1
          fi

      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ github.event.inputs.version_tag }}
          fetch-depth: 0  # Required for full commit history

      - name: Verify tag authenticity
        run: |
          git verify-tag ${{ github.event.inputs.version_tag }} || {
            echo "::error::Tag verification failed!"
            exit 1
          }
          echo "âœ… Validated signed tag: ${{ github.event.inputs.version_tag }}"

      - name: Set up webhook URL
        id: webhook
        run: |
          case "${{ github.event.inputs.deployment_environment }}" in
            staging)
              echo "url=${{ secrets.AMPLIFY_STAGING_WEBHOOK }}" >> $GITHUB_OUTPUT
              ;;
            production)
              echo "url=${{ secrets.AMPLIFY_PROD_WEBHOOK }}" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "::error::Invalid environment"
              exit 1
              ;;
          esac

      - name: Trigger Amplify deployment
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{
              "clientMetadata": {
                "version_tag": "${{ github.event.inputs.version_tag }}",
                "deployment_message": "${{ github.event.inputs.deployment_message }}"
              }
            }' \
            "${{ steps.webhook.outputs.url }}"

      - name: Notify Slack
        if: ${{ github.event.inputs.should_notify_over_slack }}
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": "ðŸš€ Deployment triggered",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Deployment Notification*\nâ€¢ Environment: ${{ github.event.inputs.deployment_environment }}\nâ€¢ Version: ${{ github.event.inputs.version_tag }}\nâ€¢ Reason: ${{ github.event.inputs.deployment_message }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOYMENT_WEBHOOK }}