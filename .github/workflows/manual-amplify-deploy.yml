name: Manual Tag Deployment

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: "Select tag to deploy (e.g., v1.0.24)"
        required: true
      deployment_environment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - staging
          - production
      deployment_message:
        description: "Deployment reason"
        required: false
        default: "Manual tag deployment"
      should_notify_slack:
        description: "Send Slack notification?"
        required: false
        default: true
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.deployment_environment }}
    steps:
      - name: Checkout full history (for tag verification)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for tags

      - name: Validate Tag Existence Locally
        run: |
          git fetch --tags --force
          if ! git rev-parse "refs/tags/${{ github.event.inputs.version_tag }}" >/dev/null 2>&1; then
            echo "::error::Tag ${{ github.event.inputs.version_tag }} does not exist!"
            exit 1
          fi
          echo "✅ Tag exists: ${{ github.event.inputs.version_tag }}"

      - name: Verify Tag Authenticity (Optional)
        run: |
          if git verify-tag "${{ github.event.inputs.version_tag }}" >/dev/null 2>&1; then
            echo "🔐 Tag cryptographically verified: ${{ github.event.inputs.version_tag }}"
          else
            echo "::warning::Tag is not signed or verification failed. Proceeding anyway."
          fi

      - name: Set Up Webhook URL
        id: webhook
        run: |
          case "${{ github.event.inputs.deployment_environment }}" in
            staging)
              echo "url=${{ secrets.AMPLIFY_STAGING_WEBHOOK }}" >> $GITHUB_OUTPUT
              ;;
            production)
              echo "url=${{ secrets.AMPLIFY_PROD_WEBHOOK }}" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "::error::Invalid environment specified"
              exit 1
              ;;
          esac

      - name: Trigger AWS Amplify via Webhook
        run: |
          curl -X POST "${{ steps.webhook.outputs.url }}" \
            -H "Content-Type: application/json" \
            -d '{
              "clientMetadata": {
                "version_tag": "${{ github.event.inputs.version_tag }}",
                "deployment_message": "${{ github.event.inputs.deployment_message }}"
              }
            }'

      - name: Slack Notification (Optional)
        if: ${{ github.event.inputs.should_notify_slack }}
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "🚀 *Deployment Started*\n• *Environment:* `${{ github.event.inputs.deployment_environment }}`\n• *Tag:* `${{ github.event.inputs.version_tag }}`\n• *By:* @${{ github.actor }}\n• *Reason:* ${{ github.event.inputs.deployment_message }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOYMENT_WEBHOOK }}
