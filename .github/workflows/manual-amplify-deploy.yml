name: Manual Tag Deployment

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: "Select tag to deploy"
        required: true
        type: string
      deployment_environment:
        description: "Target environment"
        required: true
        type: choice
        options: [staging, production]
        default: "staging"
      deployment_message:
        description: "Deployment reason"
        required: false
        default: "Manual deployment"
      notify_slack:
        description: "Send Slack notification?"
        type: boolean
        default: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
  actions: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.deployment_environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/tags/${{ github.event.inputs.version_tag }}

      - name: Validate tag
        run: |
          if ! git show-ref --tags "refs/tags/${{ github.event.inputs.version_tag }}"; then
            echo "::error::Tag ${{ github.event.inputs.version_tag }} not found!"
            exit 1
          fi

      - name: Create .env.deploy with version
        run: |
          echo "CLIENT_METADATA_VERSION_TAG=${{ github.event.inputs.version_tag }}" > .env.deploy

      - name: Commit .env.deploy and force-push tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # Create a temp branch from the tag
          git checkout -b temp-deploy-branch

          echo "CLIENT_METADATA_VERSION_TAG=${{ github.event.inputs.version_tag }}" > .env.deploy

          git add .env.deploy
          git commit -m "chore: add .env.deploy for tag ${{ github.event.inputs.version_tag }}" || echo "No changes to commit"

          # Re-tag and push
          git tag -f ${{ github.event.inputs.version_tag }}
          git push origin -f ${{ github.event.inputs.version_tag }}

          # Optional: delete temp branch locally
          git checkout -
          git branch -D temp-deploy-branch

      - name: Trigger Amplify
        run: |
          if [[ "${{ github.event.inputs.deployment_environment }}" == "production" ]]; then
              WEBHOOK="https://webhooks.amplify.us-east-1.amazonaws.com/..."  # <-- Replace with production webhook
          else
              WEBHOOK="https://webhooks.amplify.us-east-1.amazonaws.com/..."  # <-- Replace with staging webhook
          fi

          echo "Triggering deployment via webhook: $WEBHOOK"

          curl -X POST "$WEBHOOK" \
            -H "Content-Type: application/json" \
            -d '{}'
